{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\larkm\\\\job-vacancies-system\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport VacancyCard from './components/VacancyCard';\nimport { useApi } from './hooks/useApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomGrid = ({\n  children,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Grid, {\n  ...props,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n_c = CustomGrid;\nconst App = () => {\n  _s();\n  const [vacancies, setVacancies] = useState([]);\n  const {\n    listVacancies,\n    createResponse\n  } = useApi();\n  useEffect(() => {\n    const fetchVacancies = async () => {\n      try {\n        const data = await listVacancies();\n        setVacancies(data.items);\n      } catch (error) {\n        toast.error('Failed to load vacancies');\n      }\n    };\n    fetchVacancies();\n  }, [listVacancies]);\n  const handleRespond = async (vacancyId, email) => {\n    try {\n      await createResponse({\n        userEmail: email,\n        vacancyId\n      });\n      toast.success('Response submitted successfully!');\n      const data = await listVacancies();\n      setVacancies(data.items);\n    } catch (error) {\n      toast.error('Failed to submit response');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Job Vacancies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"Total vacancies: \", vacancies.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: vacancies.map(vacancy => /*#__PURE__*/_jsxDEV(CustomGrid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        component: \"div\",\n        children: /*#__PURE__*/_jsxDEV(VacancyCard, {\n          vacancy: vacancy,\n          onRespond: handleRespond\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, vacancy.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+3cGSwz8tae+CyVL3NC3/V9KaUM=\", false, function () {\n  return [useApi];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomGrid\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Grid","toast","ToastContainer","VacancyCard","useApi","jsxDEV","_jsxDEV","CustomGrid","children","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","vacancies","setVacancies","listVacancies","createResponse","fetchVacancies","data","items","error","handleRespond","vacancyId","email","userEmail","success","maxWidth","sx","py","variant","component","gutterBottom","length","container","spacing","map","vacancy","item","xs","sm","md","onRespond","id","position","_c2","$RefreshReg$"],"sources":["C:/Users/larkm/job-vacancies-system/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography } from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport VacancyCard from './components/VacancyCard';\r\nimport { useApi } from './hooks/useApi';\r\nimport { Vacancy } from './types/types';\r\n\r\ninterface CustomGridProps {\r\n  item: boolean;\r\n  xs: number;\r\n  sm: number;\r\n  md: number;\r\n  component: React.ElementType;\r\n  children: React.ReactNode;\r\n  key?: string | number;\r\n}\r\n\r\nconst CustomGrid: React.FC<CustomGridProps> = ({ children, ...props }) => (\r\n  <Grid {...props}>{children}</Grid>\r\n);\r\n\r\n\r\nconst App: React.FC = () => {\r\n  const [vacancies, setVacancies] = useState<Vacancy[]>([]);\r\n  const { listVacancies, createResponse } = useApi();\r\n\r\n  useEffect(() => {\r\n    const fetchVacancies = async () => {\r\n      try {\r\n        const data = await listVacancies();\r\n        setVacancies(data.items);\r\n      } catch (error) {\r\n        toast.error('Failed to load vacancies');\r\n      }\r\n    };\r\n\r\n    fetchVacancies();\r\n  }, [listVacancies]);\r\n\r\n  const handleRespond = async (vacancyId: number, email: string) => {\r\n    try {\r\n      await createResponse({ userEmail: email, vacancyId });\r\n      toast.success('Response submitted successfully!');\r\n      \r\n      const data = await listVacancies();\r\n      setVacancies(data.items);\r\n    } catch (error) {\r\n      toast.error('Failed to submit response');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Job Vacancies\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Total vacancies: {vacancies.length}\r\n      </Typography>\r\n      \r\n    <Grid container spacing={2}>\r\n    {vacancies.map((vacancy) => (\r\n        <CustomGrid\r\n        key={vacancy.id}\r\n        item={true}\r\n        xs={12}\r\n        sm={6}\r\n        md={4}\r\n        component=\"div\"\r\n        >\r\n        <VacancyCard \r\n            vacancy={vacancy} \r\n            onRespond={handleRespond}\r\n        />\r\n        </CustomGrid>\r\n    ))}\r\n    </Grid>\r\n\r\n      <ToastContainer position=\"bottom-right\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}